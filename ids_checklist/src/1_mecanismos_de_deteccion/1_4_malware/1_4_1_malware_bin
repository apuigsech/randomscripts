#!/usr/bin/env bash

TEST_NAME="1.4.1. Transmisi√≥n de Malware"
TEST_VERSION="1.0"

SAMPLES_DIR="binaries"

NCAT_BIN=`which nc` 
DATE_FORMAT="+%d/%m/%y %H:%M:%S"

TASK_BREAKTIME=10


function banner () {
	echo "################################################################################"
	echo "# ${TEST_NAME} (${TEST_VERSION})"
	echo "################################################################################"
}

function estimate_time () {
	local life_etime=$(expr 20 \* 5)
	local break_etime=$(expr $TASK_BREAKTIME \* 4)
	local etime=$(expr $life_etime + $break_etime)
	etime=$(expr $etime \/ 60)
	echo "Estimated time: ${etime} minutes"
}

function usage () {
	echo "Usage:"
	echo "  ${0} <target_ip> <target_port>"
}

function write_log () {
	local msg=$1
	local time=`date "$DATE_FORMAT"`
	echo "[${time}] ${msg}"
}

function exec_task () {
	local cmd=$1
	write_log "RUN: ${cmd}"
	echo $cmd | bash &> /dev/null
}

function exec_task_timeout() {
	local cmd=$1
	local timeout=$2
	write_log "TASK START"
	exec_task "$cmd"
#	{ sleep $timeout; kill -9 $task_pid; }	
	write_log "TASK END"
}

function run_test () {
	local target_ip=$1
	local target_port=$2
	local cmd_base="${NCAT_BIN} ${target_ip} ${target_port} -vvv"
	for filename in $(find ${SAMPLES_DIR} -type f); do
		write_log "TASK START ${filename}"
		exec_task "${cmd_base} < ${filename}"
		write_log "TASK END ${filename}"
		sleep ${TASK_BREAKTIME}
	done
}

function main () {
	banner
	if [ $# -lt 2 ]; then
		usage
		exit 1
	else
		target_ip=$1
		target_port=$2
	fi

	estimate_time

	run_test $target_ip $target_port
}

main $1 $2
